buildscript {
    ext.kotlin_version = '1.3.61'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

plugins {
    id "maven-publish"
    id "maven"
    id "java"
    id "jacoco"
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'
apply from: 'version.gradle'

group 'com.github.korosuke613'
version = System.getenv("GRADLE_PUBLISH_VERSION") ?: "1.0.0"

project.ext {
    artifactId = 'BWDM'
}


sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}



dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    compile group: 'net.java.dev.jna', name: 'jna', version: '4.5.1'
    compile group: 'args4j', name: 'args4j', version: '2.33'
    compile group: 'com.github.nickbattle', name:'FJ-VDMJ', version: 'FJ-VDMJ'
    implementation 'com.github.korosuke613:pict-java:master-SNAPSHOT'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes 'Main-Class': 'bwdm.BwdmMain'
    }
}

mainClassName = 'bwdm.BwdmMain'
applicationDefaultJvmArgs = ["-Djava.library.path=./libs"]

run{
    // 「args」という引数が存在するかチェック
    if (project.hasProperty('args')) {
        // 存在する場合は、半角スペースでsplitして引数に設定する
        args(project.args.split('\\s+'))
    }
}

jacoco {
    toolVersion = "0.8.0"
    applyTo junitPlatformTest
}


jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
        html.enabled = true
    }
}

task junitPlatformJacocoReport(type: JacocoReport) {
    sourceSets sourceSets.main
    executionData junitPlatformTest
    reports {
        xml.enabled = true
        csv.enabled = false
        html.enabled = true
        html.destination file("${buildDir}/reports/jacoco/test/")
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

task customeTest(dependsOn: [junitPlatformTest, junitPlatformJacocoReport]){}
